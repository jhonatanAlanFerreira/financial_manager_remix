// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                  @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  login               String                  @unique
  password            String
  accountant_balance  Float                   @default(0)
  companies           Company[]
  expenses            Expense[]
  common_transactions CommonUserTransaction[]
  transactions        Transaction[]
  logs                Log[]
  transaction_types   TransactionType[]
}

model Company {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String        @unique
  working_capital Float
  user_id         String        @db.ObjectId
  user            User          @relation(fields: [user_id], references: [id])
  expense_ids     String[]      @db.ObjectId
  expenses        Expense[]     @relation(fields: [expense_ids], references: [id])
  transactions    Transaction[]
}

model Expense {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  amount      Float
  user_id     String    @db.ObjectId
  user        User      @relation(fields: [user_id], references: [id])
  company_ids String[]  @db.ObjectId
  companies   Company[] @relation(fields: [company_ids], references: [id])
}

model CommonUserTransaction {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String @unique
  user_id String @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])
}

model Transaction {
  id                  String           @id @default(auto()) @map("_id") @db.ObjectId
  name                String           @unique
  amount              Float
  transaction_date    DateTime
  created_at          DateTime         @default(now())
  user_id             String           @db.ObjectId
  user                User             @relation(fields: [user_id], references: [id])
  company_id          String?          @db.ObjectId
  company             Company?         @relation(fields: [company_id], references: [id])
  file                File?
  transaction_type_id String?          @db.ObjectId
  transactionType     TransactionType? @relation(fields: [transaction_type_id], references: [id])
}

model TransactionType {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String        @unique
  transactions Transaction[]
  user_id      String        @db.ObjectId
  user         User          @relation(fields: [user_id], references: [id])
}

model File {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  sha1           String      @unique
  transaction_id String      @unique @db.ObjectId
  transaction    Transaction @relation(fields: [transaction_id], references: [id])
}

model Log {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  table             String
  old_value         Json
  changed_date      DateTime         @default(now())
  register_id       Int
  reason            String
  user_id           String           @db.ObjectId
  user              User             @relation(fields: [user_id], references: [id])
  operation_type_id String           @db.ObjectId
  operation_type    LogOperationType @relation(fields: [operation_type_id], references: [id])
}

model LogOperationType {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  log  Log[]
}
